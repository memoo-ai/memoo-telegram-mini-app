import { useState, forwardRef, useImperativeHandle } from 'react';

interface IconProps {
  className?: string;
  hoverColor?: string;
  [key: string]: any;
  color?: string;
  iconColor?: string;
}

export const IconSuccess = forwardRef(({ className, iconColor, color = '#36D39D', ...rest }: IconProps, ref) => {
  return (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M20 9.99887C19.9932 15.4465 15.6471 20 10 20C4.36192 20.0022 0 15.4555 0 10.0011C0 4.55354 4.35291 0 9.99775 0C15.6493 0 19.991 4.55354 19.9977 9.99887H20ZM14.668 7.59824C14.659 6.97894 14.2516 6.58259 13.734 6.58034C13.4459 6.58034 13.2118 6.71771 13.016 6.91364C11.625 8.30762 10.2341 9.70161 8.84763 11.0978C8.77335 11.1722 8.73059 11.1767 8.65631 11.0978C8.12064 10.5529 7.58046 10.0124 7.04479 9.4674C6.92775 9.34805 6.79496 9.24896 6.64866 9.17239C6.26153 8.97196 5.84065 9.08231 5.58632 9.36831C5.2172 9.78043 5.25321 10.3051 5.64483 10.6992C6.44384 11.5032 7.2451 12.3049 8.05087 13.1066C8.47175 13.5255 9.03218 13.5278 9.45307 13.1066C11.0916 11.4717 12.7279 9.83673 14.3597 8.19728C14.5465 8.01036 14.6703 7.7784 14.6703 7.59824H14.668Z"
        fill={color}
      />
    </svg>
  );
});
export const IconError = forwardRef(({ className, iconColor, color = '#EF4D61', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0013716 9.74742C0.231449 4.02189 4.77139 -0.0805219 10.1122 0.00119949C16.0992 0.0942361 20.169 4.89568 20.0244 10.2126C19.8685 15.9432 15.3587 20.072 9.94498 19.999C3.83348 19.9161 -0.0841215 15.0153 0.0013716 9.74742ZM12.5047 13.4588C12.672 13.4588 12.8128 13.44 12.9473 13.367C13.552 13.0389 13.6438 12.2883 13.1208 11.749C12.6129 11.2234 12.0911 10.7105 11.5618 10.2063C11.3984 10.0504 11.4134 9.95361 11.5656 9.80776C12.0685 9.32121 12.5601 8.82208 13.0592 8.33049C13.2101 8.18088 13.332 8.01492 13.4074 7.81628C13.6162 7.25932 13.2842 6.69732 12.6971 6.598C12.3124 6.53262 11.9993 6.66841 11.734 6.93243C11.2387 7.42653 10.7396 7.91811 10.258 8.42604C10.0808 8.61212 9.97012 8.62595 9.78405 8.42856C9.29749 7.91057 8.79711 7.40641 8.28666 6.91357C7.66432 6.3126 6.78802 6.52759 6.59189 7.32343C6.49634 7.70941 6.68115 8.01744 6.93763 8.27894C7.4355 8.78562 7.9384 9.28852 8.4501 9.78136C8.61732 9.94229 8.65378 10.0441 8.46016 10.2252C7.95726 10.6954 7.47825 11.1933 6.98666 11.676C6.85842 11.8018 6.75156 11.9413 6.66984 12.101C6.47748 12.4719 6.61452 13.0376 6.95397 13.2803C7.37767 13.5833 7.85542 13.5267 8.28038 13.1055C8.79333 12.5989 9.30252 12.0884 9.80165 11.5679C9.96006 11.4032 10.0657 11.3894 10.2316 11.5629C10.7144 12.0696 11.211 12.5637 11.7064 13.0578C11.9314 13.2828 12.1741 13.4802 12.5035 13.4576L12.5047 13.4588Z"
        fill={color}
      />
    </svg>
  );
});
export const IconWarning = forwardRef(({ className, iconColor, color = '#FFC12E', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0012091 9.75414C0.233707 3.97813 4.82964 -0.0975081 10.1419 0.00177496C16.1605 0.114882 20.1758 4.94708 20.0338 10.2066C19.8792 15.9235 15.3863 20.0683 9.95591 19.9991C3.85943 19.9225 -0.0792228 15.04 0.0012091 9.75414ZM9.06362 8.11157C9.06362 8.79021 9.05733 9.47011 9.06613 10.1488C9.07367 10.7017 9.31874 11.0788 9.73095 11.2107C10.3644 11.413 10.955 10.9958 10.9739 10.2468C11.0091 8.83671 11.0078 7.42539 10.9751 6.01531C10.9575 5.24367 10.3204 4.81386 9.67566 5.06773C9.20438 5.25372 9.0787 5.6584 9.06739 6.10454C9.05105 6.77313 9.06362 7.44172 9.06362 8.11031V8.11157ZM11.283 13.7921C11.2742 13.0418 10.759 12.5215 10.025 12.5215C9.27978 12.5215 8.74692 13.0644 8.7708 13.8235C8.79467 14.5675 9.28983 15.03 10.025 15.0224C10.8055 15.0136 11.2554 14.5436 11.283 13.7933V13.7921Z"
        fill={color}
      />
    </svg>
  );
});
export const IconInfo = forwardRef(({ className, iconColor, color = '#04D0EA', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0012091 9.75414C0.233707 3.97813 4.82964 -0.0975081 10.1419 0.00177496C16.1605 0.114882 20.1758 4.94708 20.0338 10.2066C19.8792 15.9235 15.3863 20.0683 9.95591 19.9991C3.85943 19.9225 -0.0792228 15.04 0.0012091 9.75414ZM9.06362 8.11157C9.06362 8.79021 9.05733 9.47011 9.06613 10.1488C9.07367 10.7017 9.31874 11.0788 9.73095 11.2107C10.3644 11.413 10.955 10.9958 10.9739 10.2468C11.0091 8.83671 11.0078 7.42539 10.9751 6.01531C10.9575 5.24367 10.3204 4.81386 9.67566 5.06773C9.20438 5.25372 9.0787 5.6584 9.06739 6.10454C9.05105 6.77313 9.06362 7.44172 9.06362 8.11031V8.11157ZM11.283 13.7921C11.2742 13.0418 10.759 12.5215 10.025 12.5215C9.27978 12.5215 8.74692 13.0644 8.7708 13.8235C8.79467 14.5675 9.28983 15.03 10.025 15.0224C10.8055 15.0136 11.2554 14.5436 11.283 13.7933V13.7921Z"
        fill={color}
      />
    </svg>
  );
});
export const IconTip = ({ className, color = '#ffffff', bgColor = '#5D64A2', ...rest }: IconProps) => {
  // const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="12"
      height="12"
      viewBox="0 0 12 12"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      // onMouseOver={() => setHovered(true)}
      // onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M6 12C9.31371 12 12 9.31371 12 6C12 2.68629 9.31371 0 6 0C2.68629 0 0 2.68629 0 6C0 9.31371 2.68629 12 6 12Z"
        fill={bgColor}
      />
      <path
        d="M6.0004 4.05153C5.74601 4.05153 5.53974 3.97819 5.37931 3.82922C5.21889 3.68025 5.13867 3.49691 5.13867 3.27918C5.13867 3.06146 5.21889 2.87582 5.37931 2.72914C5.53974 2.58017 5.74601 2.50684 6.0004 2.50684C6.25479 2.50684 6.46106 2.57559 6.62148 2.71539C6.78191 2.85519 6.86212 3.03396 6.86212 3.25168C6.86212 3.48315 6.7842 3.67338 6.62607 3.82464C6.47022 3.9759 6.26167 4.05153 6.0004 4.05153ZM5.30827 9.49461V5.53794H6.69253V9.49461H5.30827Z"
        fill={color}
      />
    </svg>
  );
};
export const IconCollect = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#B53BFF',
      hoverColor = '#B53BFF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg
        width={width}
        height={height}
        viewBox="0 0 23 23"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M8.85229 2.09762C10.0261 0.20968 12.7739 0.20968 13.9477 2.09762L15.5804 4.72359C15.9934 5.38785 16.6495 5.86453 17.4089 6.05206L20.4109 6.79338C22.5691 7.32635 23.4182 9.93962 21.9854 11.6394L19.9925 14.0037C19.4884 14.6017 19.2378 15.373 19.2941 16.1532L19.5167 19.2373C19.6768 21.4546 17.4538 23.0697 15.3944 22.2323L12.5301 21.0675C11.8055 20.7729 10.9945 20.7729 10.2699 21.0675L7.40555 22.2323C5.3462 23.0697 3.12322 21.4546 3.28328 19.2373L3.5059 16.1532C3.56221 15.373 3.3116 14.6017 2.80748 14.0037L0.814573 11.6394C-0.618233 9.93962 0.230867 7.32635 2.38914 6.79338L5.39112 6.05206C6.15049 5.86453 6.80659 5.38785 7.21959 4.72359L8.85229 2.09762Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconArrow = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#B53BFF',
      hoverColor = '#B53BFF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg width="10" height="9" viewBox="0 0 10 9" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M7.92137 4.72512C7.81263 4.64857 7.74609 4.66717 7.68314 4.66717C5.19641 4.66646 2.70897 4.66359 0.222248 4.67146C0.0326671 4.67146 -0.0102568 4.61638 0.001905 4.44182C0.0169284 4.22291 0.0140668 4.00185 0.001905 3.78222C-0.00524898 3.64415 0.0441135 3.61482 0.174316 3.61553C1.50138 3.61983 2.82773 3.6184 4.15479 3.6184C5.33305 3.6184 6.5106 3.6184 7.68886 3.61697C7.74538 3.61697 7.82765 3.64487 7.85412 3.58835C7.88703 3.51824 7.80404 3.47746 7.76112 3.43454C6.90478 2.57535 6.04917 1.71472 5.18568 0.861251C5.0562 0.733194 5.05333 0.655216 5.18926 0.537175C5.35523 0.39338 5.50904 0.234562 5.65856 0.0728815C5.7487 -0.0244127 5.80593 -0.0236973 5.90108 0.0714507C6.94485 1.12094 7.99362 2.16614 9.04097 3.21348C9.31425 3.48676 9.58395 3.76362 9.85938 4.03404C9.93808 4.11131 9.95024 4.16138 9.86367 4.24795C8.54877 5.55641 7.23458 6.86702 5.92755 8.18264C5.8045 8.3064 5.73654 8.29138 5.63138 8.1762C5.48329 8.01381 5.32662 7.85856 5.16279 7.71191C5.05262 7.61247 5.05476 7.54665 5.16136 7.44149C5.94687 6.66313 6.72594 5.87762 7.5093 5.09641C7.63521 4.97121 7.77328 4.85747 7.92065 4.7244L7.92137 4.72512Z"
          fill="#B53BFF"
        />
      </svg>
    );
  },
);
export const IconHome = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#D899FF',
      hoverColor = '#D899FF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg width="26" height="25" viewBox="0 0 26 25" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M1.60684 14.2231L0 12.6266L12.7511 0L25.4808 12.6278L23.8727 14.2231L12.7499 3.18922L1.60684 14.2231Z"
          fill={color}
        />
        <path d="M23.0249 25.0008H2.47583V10.6387H4.74966V22.7452H20.7511V10.6387H23.0249V25.0008Z" fill={color} />
      </svg>
    );
  },
);
export const IconEarn = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#D899FF',
      hoverColor = '#D899FF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg width="26" height="25" viewBox="0 0 26 25" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M17.3809 6.1783C18.6418 6.031 19.8914 5.84749 21.0774 5.38184C21.5879 5.18085 22.0848 4.95864 22.503 4.58663C22.729 4.38564 22.7339 4.2221 22.5217 4.00488C22.0099 3.48057 21.357 3.22964 20.6791 3.02866C18.0188 2.23844 15.3086 2.17976 12.5872 2.57175C11.5473 2.72156 10.5136 2.96873 9.55361 3.43438C9.34138 3.53674 9.1404 3.65659 8.96687 3.81638C8.72219 4.04358 8.46502 4.27079 8.79959 4.66902C7.99439 4.72894 7.24287 4.78762 6.49259 4.8413C6.28911 4.85503 6.26414 4.70897 6.26664 4.55417C6.28786 3.56546 6.61618 2.72655 7.41764 2.09862C8.4463 1.29342 9.62851 0.842752 10.8844 0.549384C13.2688 -0.00739083 15.6806 -0.140967 18.1087 0.148656C19.6892 0.337161 21.2596 0.613051 22.694 1.35209C23.5916 1.81524 24.448 2.34455 24.815 3.37695C24.9473 3.74772 25.0372 4.12598 25.0372 4.52171C25.0372 7.75625 25.0484 10.9908 25.031 14.2241C25.0247 15.2839 24.6152 16.1503 23.6952 16.7733C22.7876 17.3875 21.8226 17.8394 20.7653 18.114C20.4519 18.1952 20.3483 18.1315 20.367 17.7932C20.3945 17.2601 20.3882 16.7233 20.3695 16.1903C20.3595 15.9219 20.4582 15.8033 20.7091 15.7134C21.3458 15.4849 21.9712 15.224 22.4843 14.7559C22.6491 14.6048 22.7314 14.4425 22.7252 14.2116C22.7115 13.6898 22.7152 13.168 22.7227 12.6474C22.7265 12.3815 22.6341 12.3253 22.3956 12.4426C21.8676 12.7023 21.3033 12.8633 20.7378 13.0194C20.4744 13.0931 20.3558 13.0406 20.3683 12.7335C20.3895 12.1867 20.387 11.6374 20.3695 11.0907C20.3608 10.826 20.4469 10.6999 20.7078 10.6163C21.3283 10.4165 21.9312 10.1719 22.4406 9.74241C22.6341 9.57888 22.7327 9.39911 22.7252 9.13695C22.709 8.61638 22.7127 8.09331 22.7227 7.57274C22.7277 7.29435 22.6403 7.22319 22.3782 7.34553C21.5842 7.71505 20.7378 7.93102 19.8939 8.15448C19.7104 8.20317 19.5681 8.19193 19.4482 8.02465C18.9514 7.33305 18.301 6.82247 17.5532 6.42798C17.472 6.38553 17.3872 6.34684 17.3834 6.18205L17.3809 6.1783Z"
          fill={color}
        />
        <path
          d="M0.00981295 15.608C0.00981295 14.0563 0.0360288 12.5045 0.00107433 10.9528C-0.0263899 9.71816 0.47296 8.80185 1.47166 8.11025C2.46537 7.42115 3.58641 7.06162 4.74365 6.78573C6.84217 6.28513 8.97439 6.1578 11.1141 6.33631C13.0241 6.49611 14.9129 6.81694 16.6494 7.71702C17.9777 8.40487 18.7916 9.39982 18.7816 10.9765C18.7616 14.08 18.7554 17.1834 18.7841 20.2869C18.7991 21.8811 17.9539 22.8373 16.6382 23.5364C15.1364 24.3341 13.516 24.6562 11.8494 24.8522C10.4837 25.012 9.11421 25.0482 7.75098 24.9346C5.85345 24.7773 3.96841 24.5201 2.2494 23.5951C1.82245 23.3654 1.41174 23.1107 1.04097 22.8049C0.360606 22.2406 0.0148064 21.5016 0.0110613 20.6152C0.00606782 18.9461 0.00981295 17.2771 0.00981295 15.608ZM9.37137 12.5033C11.1516 12.4858 12.908 12.3073 14.6008 11.7193C15.1676 11.5233 15.7244 11.3011 16.1825 10.8941C16.4209 10.6819 16.4522 10.4847 16.2112 10.2362C15.8941 9.90791 15.5159 9.68945 15.1002 9.53215C13.7007 9.00284 12.2426 8.75441 10.7571 8.64206C8.47254 8.46979 6.22921 8.70323 4.04081 9.38609C3.48529 9.55962 2.94474 9.79556 2.53153 10.2487C2.31306 10.4872 2.34053 10.6757 2.56524 10.8791C2.90979 11.1912 3.31676 11.396 3.7412 11.5633C5.5501 12.2761 7.44513 12.4846 9.37137 12.5058V12.5033ZM9.47499 22.68C10.5985 22.7137 11.8169 22.6064 13.0204 22.358C13.9679 22.162 14.8854 21.8773 15.7306 21.3905C16.2 21.1196 16.5208 20.785 16.4472 20.1745C16.3972 19.7638 16.4322 19.3406 16.4434 18.9237C16.4509 18.6378 16.3635 18.5804 16.0976 18.704C14.4635 19.4667 12.7045 19.7089 10.9368 19.8337C9.53491 19.9324 8.12674 19.9024 6.72107 19.7239C5.32914 19.5479 3.97215 19.277 2.68009 18.7227C2.38547 18.5954 2.30807 18.699 2.31182 18.9786C2.31806 19.448 2.32555 19.9186 2.30807 20.3868C2.29683 20.7051 2.41668 20.9373 2.66136 21.1258C3.10953 21.4716 3.61387 21.715 4.14068 21.9048C5.82973 22.5115 7.5837 22.7062 9.47374 22.68H9.47499ZM9.3489 17.6016C10.9718 17.5979 12.5747 17.4481 14.1339 16.9675C14.7943 16.764 15.4497 16.548 16.0152 16.1336C16.2262 15.9788 16.4309 15.804 16.4347 15.5094C16.4409 14.9226 16.4409 14.3359 16.4409 13.7492C16.4409 13.5157 16.3298 13.4932 16.1363 13.5856C15.9029 13.698 15.6632 13.8028 15.4172 13.889C14.23 14.3009 13.0016 14.4932 11.757 14.6555C9.51868 14.9476 7.3128 14.7716 5.10942 14.3746C4.27426 14.2235 3.47405 13.9452 2.67884 13.658C2.38921 13.5532 2.30433 13.6356 2.31306 13.9202C2.32305 14.246 2.35301 14.5781 2.30433 14.8964C2.18323 15.6966 2.58646 16.146 3.25683 16.4444C3.41163 16.5131 3.56269 16.5917 3.71998 16.6541C5.53012 17.3657 7.42141 17.5954 9.3489 17.6016Z"
          fill={color}
        />
      </svg>
    );
  },
);
export const IconAirdrop = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#D899FF',
      hoverColor = '#D899FF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg width="22" height="25" viewBox="0 0 22 25" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M20.5824 6.54263C20.0429 5.26605 19.2704 4.12171 18.2872 3.13842C17.3039 2.15513 16.1582 1.38263 14.8829 0.843197C13.5697 0.286739 12.1766 0.00392794 10.7494 0H10.7115C9.266 0 7.86242 0.282811 6.54132 0.841887C5.26605 1.38132 4.1204 2.15382 3.13711 3.13711C2.15382 4.1204 1.38132 5.26605 0.841887 6.54132C0.284121 7.86242 0 9.26338 0 10.7115V10.7337C0 10.7416 0 10.7508 0.00130931 10.7612L0.00392793 10.8018C0.00392793 10.811 0.00654656 10.8202 0.00654656 10.8306L0.0157117 10.8895C0.0183304 10.9013 0.020949 10.9131 0.0248769 10.9301C0.0274955 10.9432 0.0314235 10.955 0.0340421 10.9681L0.03797 10.9812C0.0405887 10.9904 0.0432073 10.9995 0.0471352 11.01L0.102126 11.1409C0.106054 11.1475 0.108673 11.154 0.109982 11.1553L0.116529 11.1684C0.123075 11.1802 0.129622 11.192 0.134859 11.1999L0.145334 11.2169C0.150571 11.2247 0.155808 11.2326 0.163664 11.2457C0.17152 11.2562 0.178066 11.2679 0.193778 11.2876L0.22782 11.3295C0.233057 11.336 0.238295 11.3426 0.243532 11.3465L0.278883 11.3832C0.278883 11.3832 0.288049 11.3923 0.291977 11.3963L0.365298 11.467L0.384938 11.4761L8.30627 18.062H8.19498C7.66864 18.062 7.2418 18.4901 7.2418 19.0151V24.0468C7.2418 24.5732 7.66995 25 8.19498 25H13.2267C13.753 25 14.1798 24.5719 14.1798 24.0468V19.0151C14.1798 18.4888 13.7517 18.062 13.2267 18.062H13.1154L21.059 11.4578L21.203 11.3164C21.2122 11.3059 21.22 11.2954 21.2279 11.2863L21.2436 11.2653C21.2488 11.2588 21.2541 11.2509 21.258 11.2444V11.2418C21.2685 11.23 21.2763 11.2169 21.2855 11.2012L21.3038 11.1684L21.3732 11.0126C21.3771 11.0008 21.3811 10.9891 21.3876 10.9668L21.4086 10.8738C21.4112 10.8621 21.4125 10.849 21.4125 10.8463L21.423 10.7049C21.423 9.26076 21.1388 7.85849 20.5811 6.5387L20.5824 6.54263ZM14.4325 2.73253C17.1991 4.02613 19.1317 6.69189 19.4642 9.7583H15.6476C15.6437 9.07746 15.6122 8.17927 15.514 7.20252C15.3294 5.37211 14.9667 3.87556 14.4312 2.73253H14.4325ZM13.2345 11.666L10.722 16.6767L8.21069 11.666H13.2345ZM7.7053 9.7583C7.7197 8.02084 7.92395 4.07196 9.41395 2.49817C9.79365 2.09621 10.21 1.90898 10.7206 1.90636C11.2339 1.90898 11.6503 2.09621 12.03 2.49817C13.52 4.07196 13.7242 8.01954 13.7386 9.7583H7.70399H7.7053ZM1.95873 9.7583C2.2926 6.6788 4.23562 4.0078 7.01791 2.71944C6.47978 3.86509 6.1158 5.36556 5.92987 7.20122C5.83037 8.17927 5.80025 9.07746 5.79632 9.75699H1.95873V9.7583ZM6.07652 11.666L7.85194 15.2077L3.59144 11.666H6.07652ZM17.8315 11.666L13.6064 15.1789L15.3674 11.666H17.8315ZM12.2735 19.9722V23.0963H9.14947V19.9722H12.2735Z"
          fill={color}
        />
      </svg>
    );
  },
);
export const IconImo = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#D899FF',
      hoverColor = '#D899FF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg width="22" height="25" viewBox="0 0 22 25" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M10.7795 24.9972C8.76522 24.9972 6.75097 24.989 4.73671 24.9999C3.15436 25.0094 1.87729 24.3954 0.908149 23.124C0.296273 22.3202 0.0216623 21.3836 0.014997 20.3887C-0.00633205 16.9716 -0.00233286 13.5545 0.0109978 10.136C0.01633 8.7806 1.02146 7.84805 2.45984 7.82636C3.30633 7.81416 4.15416 7.81281 4.99932 7.83043C5.30326 7.83585 5.39124 7.73419 5.39124 7.4265C5.39124 6.5929 5.37924 5.76201 5.4499 4.9257C5.56054 3.62718 6.0831 2.55502 6.95626 1.63467C7.99071 0.54489 9.28112 0 10.7448 0C12.3285 0 13.6762 0.626217 14.756 1.83799C15.7345 2.93319 16.1131 4.23171 16.1184 5.67526C16.1211 6.22286 16.1384 6.77182 16.1131 7.31807C16.0957 7.7003 16.2024 7.8494 16.605 7.83449C17.4115 7.80332 18.222 7.79925 19.0285 7.83178C19.859 7.86567 20.6308 8.07983 21.1254 8.84972C21.4147 9.29973 21.5346 9.80803 21.536 10.3353C21.5426 13.6101 21.568 16.8835 21.5306 20.1582C21.5026 22.5221 20.2456 24.2625 18.0034 24.8779C17.5914 24.9904 17.1662 24.9931 16.7449 24.9958C15.7438 25.0012 14.744 24.9972 13.7429 24.9972C12.7551 24.9972 11.7673 24.9972 10.7795 24.9972ZM10.7555 22.6807C12.7311 22.6807 14.7067 22.6455 16.6796 22.6929C18.1713 22.7282 19.2471 21.7387 19.2551 20.1325C19.2698 16.9255 19.2578 13.7171 19.2644 10.5101C19.2644 10.2187 19.1645 10.1238 18.8818 10.1293C18.126 10.1442 17.3675 10.1564 16.613 10.1252C16.217 10.1089 16.1037 10.2458 16.1131 10.6348C16.1304 11.4291 16.1264 12.2261 16.0877 13.0191C16.0637 13.5206 15.7238 13.8811 15.2786 13.9923C14.5147 14.1821 13.8829 13.6589 13.8615 12.79C13.8429 12.0215 13.8442 11.2516 13.8615 10.4817C13.8682 10.1997 13.7749 10.1279 13.5123 10.1293C11.6913 10.1374 9.87033 10.1388 8.04937 10.1293C7.76943 10.1279 7.66545 10.2011 7.67345 10.5007C7.69344 11.2299 7.69477 11.9618 7.67478 12.6911C7.64945 13.6426 7.01225 14.201 6.22574 13.9896C5.70718 13.85 5.39924 13.3905 5.38591 12.6924C5.37258 11.9754 5.37124 11.2584 5.38724 10.5413C5.39391 10.2472 5.32725 10.1184 5.00599 10.1279C4.22481 10.1496 3.44097 10.1469 2.65979 10.1279C2.35186 10.1198 2.26387 10.2363 2.26521 10.5332C2.27187 13.7537 2.25588 16.9743 2.27587 20.1948C2.2852 21.7387 3.26634 22.6794 4.79003 22.6807C6.77763 22.6821 8.76523 22.6807 10.7528 22.6807H10.7555ZM10.7595 7.825C11.6833 7.825 12.6058 7.81823 13.5296 7.82907C13.7722 7.83178 13.8709 7.77079 13.8629 7.50105C13.8442 6.83688 13.8682 6.17136 13.8535 5.50719C13.8149 3.72477 12.4685 2.32188 10.7555 2.33815C9.16648 2.35306 7.71077 3.59465 7.68678 5.44484C7.67878 6.12256 7.69477 6.80028 7.67478 7.47801C7.66678 7.75859 7.76543 7.83449 8.02804 7.83178C8.93852 7.81958 9.849 7.82636 10.7595 7.82636V7.825Z"
          fill={color}
        />
      </svg>
    );
  },
);
export const IconMe = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#D899FF',
      hoverColor = '#D899FF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg width="22" height="25" viewBox="0 0 22 25" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M3.2917 14.8818C2.25806 18.2429 1.22171 21.6093 0.178583 25.0001H22.0002C21.9826 24.8985 21.9772 24.801 21.9501 24.7102C20.9747 21.5389 19.9966 18.3675 19.0226 15.1961C18.963 14.9997 18.9264 14.8561 18.6528 14.8574C13.5929 14.8669 8.53308 14.8656 3.47324 14.8656C3.42176 14.8656 3.37028 14.875 3.2917 14.8818ZM18.8831 22.6565H3.30932C3.85526 20.8629 4.38495 19.1085 4.93361 17.3609C4.95935 17.2769 5.15037 17.197 5.26552 17.197C9.13863 17.1889 13.0131 17.193 16.8862 17.1835C17.1328 17.1835 17.2249 17.2769 17.2872 17.4923C17.4985 18.2158 17.7221 18.9365 17.9456 19.6558C18.2531 20.6488 18.5661 21.6405 18.8831 22.6565Z"
          fill={color}
        />
        <path
          d="M11.1043 12.4933C14.529 12.4987 17.3631 9.66334 17.3563 6.24134C17.3482 2.82341 14.5588 0.0272872 11.1301 0.000193036C7.72026 -0.0269012 4.87673 2.80173 4.86182 6.23592C4.84692 9.66198 7.66607 12.4879 11.1057 12.4933H11.1043ZM15.0303 6.24134C15.0343 8.37094 13.2692 10.1497 11.1355 10.1673C8.99504 10.1863 7.19193 8.40075 7.18651 6.25624C7.18109 4.11851 8.98285 2.3181 11.1206 2.32623C13.2461 2.33436 15.0262 4.11716 15.0303 6.24134Z"
          fill={color}
        />
      </svg>
    );
  },
);
export const IconInviteUser = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="20"
        height="16"
        viewBox="0 0 20 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M1.99388 9.51478C2.0862 9.51478 2.16146 9.51478 2.23571 9.51478C5.40766 9.51478 8.5796 9.51679 11.7525 9.50977C11.9452 9.50977 12.0205 9.56496 12.0767 9.74959C12.6888 11.7655 13.3109 13.7775 13.9301 15.7904C13.9491 15.8537 13.9622 15.9179 13.9812 15.9982H0C0.666299 13.8317 1.32858 11.6772 1.99388 9.51378V9.51478Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M2.99805 3.99686C3.00005 1.80429 4.82234 -0.0129752 7.00688 6.97967e-05C9.20145 0.0131148 10.9846 1.79526 10.9966 3.98883C11.0087 6.18039 9.20546 7.98963 7.00286 7.99666C4.81331 8.00368 2.99704 6.18942 2.99905 3.99686H2.99805Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M17.2615 7.73944V10.4859H15.7744V7.75449H13.0339V6.26736H15.7593V3.5249H17.2555V6.25231H20V7.73944H17.2615Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconTasks = ({ className, hoverColor = '#B53BFF', color = '#B53BFF', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);

  return (
    <svg
      width="18"
      height="16"
      viewBox="0 0 18 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M11.7813 14.5072C9.87348 14.5072 7.96458 14.5039 6.05677 14.5127C5.83271 14.5127 5.75803 14.46 5.76462 14.2272C5.78109 13.6703 5.7767 13.1135 5.76681 12.5566C5.76352 12.3743 5.82612 12.327 6.00186 12.3281C9.85481 12.3325 13.7078 12.3325 17.5607 12.3281C17.7365 12.3281 17.7991 12.3754 17.7958 12.5566C17.7859 13.1222 17.7837 13.689 17.7969 14.2546C17.8024 14.4633 17.7343 14.5127 17.5333 14.5116C15.6156 14.5039 13.6979 14.5072 11.7813 14.5072Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M12.9049 1.37465C14.4393 1.37465 15.9725 1.37904 17.5069 1.36916C17.7321 1.36806 17.8057 1.42407 17.7991 1.65472C17.7826 2.20169 17.7881 2.74976 17.7969 3.29783C17.7991 3.47466 17.7672 3.55484 17.5607 3.55484C14.4382 3.54825 11.3156 3.54935 8.19305 3.55484C8.01621 3.55484 7.95471 3.50651 7.958 3.32529C7.96789 2.75965 7.97008 2.19291 7.9569 1.62726C7.95141 1.41858 8.02061 1.36916 8.2216 1.37025C9.78233 1.37794 11.3442 1.37465 12.906 1.37465H12.9049Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M12.8873 6.8532C14.4305 6.8532 15.9736 6.8565 17.5168 6.84881C17.7244 6.84771 17.8045 6.89274 17.798 7.1168C17.7826 7.68244 17.7881 8.24918 17.7958 8.81483C17.798 8.97958 17.7474 9.03339 17.5783 9.03339C14.4469 9.029 11.3145 9.0279 8.18315 9.03339C7.98984 9.03339 7.95689 8.95871 7.95909 8.79286C7.96568 8.236 7.97007 7.67915 7.95689 7.12229C7.9514 6.90922 8.0129 6.84551 8.23147 6.84771C9.78342 6.8576 11.3354 6.8532 12.8884 6.8532H12.8873Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M2.47089 4.98368C2.43135 4.94853 2.38193 4.90899 2.33799 4.86505C1.59552 4.12368 0.857438 3.37791 0.110571 2.64093C-0.019032 2.51352 -0.0442936 2.43225 0.103981 2.29495C0.392843 2.03026 0.672918 1.75348 0.93542 1.46242C1.07491 1.30865 1.1485 1.34709 1.26931 1.4756C1.58673 1.81498 1.92502 2.13679 2.24024 2.47728C2.37643 2.62445 2.45442 2.63654 2.5961 2.47508C3.28805 1.68648 3.99757 0.91325 4.69172 0.126844C4.81913 -0.0170382 4.89601 -0.0543815 5.05088 0.0982869C5.32985 0.373969 5.63189 0.625487 5.92844 0.881399C6.03389 0.971462 6.07782 1.03626 5.96139 1.16367C4.84878 2.396 3.74166 3.63382 2.63235 4.86835C2.59171 4.91338 2.55766 4.97489 2.46979 4.98148L2.47089 4.98368Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M1.09671 6.80039C1.14613 6.84652 1.19446 6.88716 1.23949 6.93219C1.57887 7.27707 1.92375 7.61645 2.25325 7.97012C2.38505 8.1107 2.45974 8.1118 2.58934 7.96353C3.28349 7.17712 3.99191 6.4028 4.68606 5.61639C4.82225 5.46262 4.90573 5.43407 5.06389 5.59113C5.33627 5.86022 5.63063 6.10734 5.92168 6.35557C6.03811 6.45552 6.07655 6.52141 5.95244 6.65871C4.84422 7.88335 3.74369 9.11348 2.64426 10.3458C2.53442 10.4688 2.46633 10.4809 2.34331 10.3568C1.60084 9.60224 0.851777 8.85428 0.0994183 8.10961C-0.023595 7.98769 -0.0411684 7.91081 0.0961233 7.7845C0.395968 7.50442 0.679339 7.20678 0.970397 6.91682C1.00884 6.87837 1.05058 6.84323 1.09561 6.80149L1.09671 6.80039Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M0.296024 13.4109C0.282844 12.4927 1.00555 11.7986 1.91167 11.8008C2.84855 11.803 3.54489 12.4927 3.5405 13.4296C3.53611 14.3489 2.85624 15.0321 1.92046 15.0398C1.01543 15.0475 0.275156 14.3522 0.296024 13.4098V13.4109Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};
export const IconTrophy = ({ className, hoverColor = '#B53BFF', color = '#B53BFF', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);

  return (
    <svg
      width="17"
      height="15"
      viewBox="0 0 17 15"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M8.42803 0.0037745C9.90505 0.0037745 11.3821 0.00753279 12.8591 1.6198e-05C13.0489 -0.000923377 13.1184 0.0385387 13.1062 0.242426C13.0771 0.717851 13.078 1.19516 13.0526 1.67058C13.0442 1.83595 13.0911 1.88386 13.2574 1.88292C14.3671 1.87635 15.4767 1.88762 16.5864 1.87353C16.8222 1.87071 16.8673 1.94494 16.8645 2.16198C16.8504 3.39376 16.7395 4.60863 16.3158 5.7784C15.9916 6.67475 15.4617 7.43675 14.8294 8.14049C13.4407 9.68703 11.6498 10.4622 9.6617 10.8615C9.4362 10.9066 9.34506 10.9874 9.35164 11.2261C9.36667 11.7879 9.36291 12.3507 9.35258 12.9135C9.34976 13.0911 9.40707 13.1371 9.57995 13.1353C10.3692 13.1268 11.1584 13.1362 11.9477 13.1278C12.1206 13.1259 12.1779 13.17 12.1741 13.3486C12.1628 13.8324 12.1647 14.3173 12.1732 14.8021C12.176 14.958 12.1224 14.9984 11.9712 14.9984C9.61096 14.9947 7.25169 14.9947 4.89148 14.9984C4.7402 14.9984 4.68759 14.958 4.69041 14.8021C4.69886 14.3097 4.69886 13.8174 4.69041 13.3251C4.68759 13.1691 4.74114 13.1278 4.89241 13.1296C5.68917 13.1362 6.48687 13.1278 7.28363 13.1362C7.45745 13.1381 7.51383 13.092 7.51101 12.9145C7.50067 12.3366 7.49973 11.7579 7.51101 11.18C7.51571 10.9761 7.42081 10.901 7.24511 10.8718C5.98044 10.6661 4.81255 10.2 3.71231 9.55173C2.82253 9.02745 2.11973 8.30586 1.48834 7.49876C0.689698 6.47838 0.304472 5.29828 0.114678 4.03737C0.0179019 3.39376 0.0085061 2.74639 4.99298e-05 2.09809C-0.00182922 1.92239 0.0489078 1.87447 0.224608 1.87635C1.34176 1.88386 2.45986 1.87635 3.57701 1.88386C3.75271 1.8848 3.8307 1.85474 3.80533 1.65461C3.74519 1.18106 3.77996 0.701878 3.75459 0.226454C3.74331 0.022566 3.82788 1.6198e-05 3.997 0.000955773C5.47401 0.00659322 6.95102 0.0037745 8.42803 0.0037745ZM11.4582 8.83672C11.5051 8.84141 11.5221 8.84799 11.5333 8.84329C12.6871 8.31713 13.6511 7.56359 14.3774 6.51409C15.0135 5.59518 15.2822 4.55695 15.4119 3.46611C15.4316 3.29792 15.394 3.27068 15.2428 3.27161C14.5475 3.27725 13.8522 3.28007 13.1569 3.26974C12.9906 3.26786 12.9483 3.32987 12.9324 3.47926C12.8469 4.26287 12.7285 5.04177 12.5537 5.81035C12.3151 6.85703 11.9749 7.86707 11.4582 8.83578V8.83672ZM5.35656 8.85739C5.37817 8.76813 5.33683 8.72491 5.3124 8.67981C4.93751 7.9817 4.69886 7.23098 4.47524 6.47463C4.18398 5.49183 4.03646 4.48179 3.91526 3.46705C3.90304 3.36275 3.90492 3.26974 3.75177 3.27161C3.01796 3.27725 2.28416 3.27537 1.55035 3.27255C1.45263 3.27255 1.41317 3.29698 1.42538 3.40597C1.58699 4.86044 2.04175 6.18242 3.08185 7.26387C3.7358 7.94318 4.48934 8.46558 5.3575 8.85645L5.35656 8.85739Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};
export const IconCopy = ({ className, color = '#FFFFFF', hoverColor = '#07E993', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="12"
      height="13"
      viewBox="0 0 12 13"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M8.697 9.9994C9.11837 9.9994 9.52769 10.0027 9.93634 9.99873C10.5815 9.99136 10.9968 9.57936 10.9975 8.93087C11.0008 6.64376 11.0008 4.35666 10.9975 2.06955C10.9961 1.4224 10.5801 1.00437 9.935 1.00236C8.09206 0.998343 6.24912 0.998343 4.40619 1.00236C3.74364 1.0037 3.33834 1.42173 3.33432 2.09366C3.33097 2.6028 3.33432 3.11261 3.33432 3.66731C2.92165 3.66731 2.5264 3.66597 2.13115 3.66731C1.39893 3.67066 1.00167 4.06792 1.001 4.80148C0.999665 7.03299 0.999665 9.26449 1.001 11.496C1.00167 12.2758 1.38889 12.6643 2.16532 12.665C3.95265 12.6664 5.73999 12.6664 7.52799 12.665C8.2649 12.665 8.66283 12.2698 8.66618 11.5389C8.66819 11.0612 8.66819 10.5842 8.6702 10.1066C8.6702 10.0858 8.68025 10.0657 8.697 9.9994ZM9.97587 2.01528V8.97308H4.35125V2.01528H9.97587ZM2.02263 11.6521V4.69296H3.33365C3.33365 6.10582 3.33231 7.49255 3.33365 8.87929C3.33432 9.59342 3.73426 9.99739 4.44236 9.99873C5.39699 10.0014 6.35162 9.99873 7.30558 9.99873C7.42148 9.99873 7.53804 9.99873 7.64724 9.99873V11.6521H2.02263Z"
        fill={hovered ? hoverColor : color}
        stroke={hovered ? hoverColor : color}
        strokeWidth="0.3"
      />
    </svg>
  );
};
export const IconJoin = forwardRef(
  ({ className, iconColor, color = '#B53BFF', hoverColor = '#B53BFF', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    return (
      <svg
        width="18"
        height="18"
        viewBox="0 0 18 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M9.02671 18C4.02672 17.999 0.00477524 13.9943 4.2564e-06 9.01335C-0.00476673 4.01431 4.00191 -0.00190772 8.9895 6.7983e-07C13.9857 0.00190907 17.9914 4.00381 18 8.99999C18.0086 13.9446 13.9637 18.0009 9.02671 18ZM6.37882 11.979C6.36546 12.4341 6.57538 12.5916 6.94465 12.4103C7.52862 12.1231 8.10591 11.8196 8.67175 11.5C8.90935 11.3654 9.09732 11.3731 9.3311 11.5057C9.86927 11.8111 10.4227 12.0906 10.9704 12.3779C11.125 12.459 11.2815 12.5544 11.459 12.4303C11.645 12.3006 11.6422 12.125 11.604 11.9217C11.4971 11.3607 11.4218 10.7929 11.3053 10.2338C11.23 9.87499 11.2872 9.60877 11.5821 9.35495C12.0267 8.97232 12.4284 8.53911 12.8511 8.13167C12.9847 8.00286 13.083 7.86736 13.0114 7.67079C12.9475 7.49713 12.8025 7.45133 12.6355 7.42843C12.0067 7.33969 11.3798 7.23473 10.749 7.15839C10.4857 7.1269 10.3235 7.02767 10.209 6.77671C9.94656 6.19847 9.65267 5.63549 9.37022 5.06584C9.29007 4.90458 9.19942 4.75668 8.98664 4.76145C8.77481 4.76622 8.69179 4.91889 8.61259 5.07919C8.33206 5.64885 8.03817 6.21278 7.77385 6.78912C7.66698 7.02194 7.52004 7.11736 7.2729 7.14885C6.64313 7.22709 6.01622 7.33396 5.3874 7.42366C5.20515 7.44942 5.03626 7.48854 4.97233 7.68511C4.90935 7.87976 5.01718 8.01621 5.14981 8.14312C5.61832 8.59541 6.0792 9.05629 6.55343 9.50285C6.70706 9.64789 6.76049 9.78434 6.71756 10.0029C6.58588 10.6727 6.48378 11.3483 6.37691 11.978L6.37882 11.979Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconFriends = ({ className, hoverColor = '#B53BFF', color = '#FFFFFF', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);

  return (
    <svg width="14" height="11" viewBox="0 0 14 11" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M8.1819 6.50804C8.63436 7.97784 9.08682 9.44969 9.54339 10.9332H0C0.00754093 10.8886 0.00959754 10.8461 0.0219372 10.8064C0.448342 9.41953 0.876118 8.03268 1.30184 6.64515C1.32789 6.55946 1.34366 6.49639 1.46363 6.49708C3.67654 6.50119 5.88946 6.5005 8.1017 6.5005C8.12432 6.5005 8.14694 6.50462 8.18122 6.50804H8.1819ZM1.36285 9.90832H8.17368C7.93511 9.12406 7.7034 8.35694 7.46346 7.59257C7.45181 7.55623 7.36817 7.52127 7.31813 7.52127C5.62416 7.51784 3.93019 7.51921 2.23623 7.51579C2.1286 7.51579 2.08815 7.55692 2.06073 7.65084C1.96818 7.96756 1.87084 8.28222 1.7728 8.59688C1.63844 9.03083 1.50133 9.46477 1.36285 9.909V9.90832Z"
        fill={color}
      />
      <path
        d="M4.76519 5.46407C3.26728 5.46613 2.02783 4.22667 2.03126 2.73014C2.03468 1.23498 3.25494 0.01198 4.75422 0.000325839C6.24526 -0.0113283 7.48883 1.22538 7.49569 2.7274C7.50186 4.22599 6.26926 5.46133 4.76519 5.46407ZM3.04791 2.72946C3.04654 3.66042 3.81777 4.4385 4.75079 4.44673C5.68724 4.45496 6.47492 3.67413 6.47766 2.73631C6.4804 1.80124 5.69203 1.01424 4.75764 1.01767C3.82805 1.02109 3.04928 1.80124 3.04791 2.72946Z"
        fill={color}
      />
      <path
        d="M10.7588 4.28022V2.40527H11.7693V4.26994H13.6463V5.29208H11.7796V7.16428H10.7629V5.30236H8.88867V4.28022H10.7581H10.7588Z"
        fill={color}
      />
    </svg>
  );
};
export const IconTwitter = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        id="Layer_2"
        data-name="Layer 2"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 36.05 33.76"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <g id="Design">
          <path
            style={{ fill: hovered ? hoverColor : color, strokeWidth: 0 }}
            d="M.08,0h.18C3.73,0,7.19,0,10.66,0c.11,0,.18.03.24.12,2.97,3.98,5.94,7.95,8.91,11.92.04.05.07.1.12.16.09-.1.18-.19.27-.28,2.01-2.17,4.01-4.34,6.02-6.51,1.64-1.77,3.28-3.54,4.92-5.31.06-.07.13-.1.22-.1.96,0,1.92,0,2.88,0h.16c-4.36,4.71-8.7,9.4-13.04,14.09,4.9,6.55,9.79,13.09,14.7,19.65-.06,0-.11.01-.15.01-3.49,0-6.98,0-10.47,0-.09,0-.14-.04-.2-.11-3.25-4.34-6.5-8.69-9.74-13.03-.02-.03-.05-.06-.08-.11-.1.1-.19.2-.27.29-2,2.16-4,4.32-6,6.48-1.97,2.13-3.94,4.25-5.91,6.38-.04.05-.12.09-.18.09-.98,0-1.96,0-2.94,0-.03,0-.06,0-.12,0,4.68-5.05,9.33-10.08,14-15.12C9.36,12.42,4.73,6.22.08,0ZM31.39,31.43c-.03-.05-.05-.08-.08-.11-.82-1.09-1.63-2.18-2.45-3.27-3.02-4.03-6.03-8.07-9.05-12.1-3.37-4.5-6.73-9-10.09-13.5-.05-.07-.1-.1-.2-.1-1.55,0-3.1,0-4.65,0-.04,0-.08,0-.14,0,.04.06.07.09.09.13.38.5.76,1.01,1.13,1.51,2.76,3.69,5.52,7.38,8.28,11.08,4.05,5.42,8.1,10.83,12.15,16.25.06.08.12.11.22.11,1.54,0,3.08,0,4.62,0h.15Z"
          />
        </g>
      </svg>
    );
  },
);
export const IconBoost = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="16"
        height="19"
        viewBox="0 0 16 19"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M0.624023 10.7318C4.31284 7.23158 8.00286 3.73018 11.6917 0.22998C11.7144 0.2455 11.7358 0.259825 11.7585 0.275345C11.558 0.957 11.3598 1.63866 11.1581 2.32031C10.6722 3.95342 10.1875 5.58534 9.69565 7.21606C9.63716 7.40945 9.68491 7.48347 9.88308 7.51212C11.1079 7.69357 12.3327 7.88339 13.5564 8.07201C14.33 8.19139 15.1035 8.31315 15.9762 8.45044C12.2265 11.9984 8.52693 15.4986 4.82737 19C4.80707 18.9892 4.78558 18.9785 4.76529 18.9678C4.80588 18.8138 4.84289 18.6586 4.88825 18.5058C5.53171 16.3414 6.17516 14.1759 6.82578 12.0139C6.88547 11.8157 6.83175 11.7346 6.64193 11.7071C5.22968 11.5042 3.81623 11.3012 2.40397 11.0947C1.82856 11.0099 1.25435 10.9168 0.678938 10.8285C0.661031 10.7974 0.64193 10.7664 0.624023 10.7354L0.624023 10.7318Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconDocs = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="14"
        height="16"
        viewBox="0 0 14 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M13.9967 6.00376C13.9967 7.89572 13.9967 9.78768 13.9967 11.6796C13.9967 12.0045 13.9967 12.0045 13.6651 12.0055C13.2208 12.0068 12.9987 12.2268 12.9987 12.6652C12.9987 13.0482 13.0047 13.4322 12.9957 13.8153C12.9927 13.9677 13.0438 14.0258 13.1961 14.0188C13.3875 14.0098 13.5799 14.0258 13.7703 14.0138C13.9466 14.0027 14.0027 14.0729 13.9997 14.2454C13.9917 14.7457 13.9887 15.246 13.9997 15.7453C14.0047 15.9438 13.9386 16.001 13.7412 16C12.6249 15.991 11.5086 15.996 10.3934 15.996C7.96941 15.996 5.54546 15.996 3.12151 15.996C2.59944 15.996 2.09942 15.9188 1.62845 15.6681C0.56428 15.0976 0.0281846 14.1852 0.0191662 13.0101C-0.00688708 9.67639 -0.00488298 6.34264 0.01616 3.0099C0.0241764 1.74859 0.636428 0.821155 1.77876 0.271713C2.20463 0.0681789 2.6766 0.0110289 3.14155 0.0100263C6.66475 0.00100263 10.1879 0.00701842 13.7111 0C13.9506 0 14.0007 0.0832184 13.9997 0.302795C13.9927 2.20278 13.9957 4.10277 13.9957 6.00376H13.9967ZM6.92728 12.0045C5.6617 12.0045 4.39611 12.0045 3.13052 12.0045C2.80486 12.0045 2.50024 12.0606 2.26576 12.3133C1.95913 12.6442 1.93107 13.0302 2.08439 13.4282C2.25073 13.8594 2.62649 14.0088 3.04735 14.0098C5.62863 14.0188 8.2099 14.0138 10.7912 14.0178C10.9535 14.0178 11.0086 13.9677 11.0056 13.8032C10.9966 13.2949 10.9906 12.7866 11.0076 12.2792C11.0146 12.0546 10.9425 11.9985 10.725 12.0005C9.45946 12.0105 8.19387 12.0055 6.92829 12.0055L6.92728 12.0045ZM7.50847 7.01742C8.57465 7.01742 9.63983 7.00939 10.706 7.02343C10.9555 7.02644 11.0287 6.94623 11.0046 6.71161C10.9866 6.53816 10.9946 6.36169 11.0036 6.18724C11.0106 6.04687 10.9565 5.99172 10.8162 5.99674C10.6248 6.00376 10.4334 5.99874 10.2421 5.99874C8.26001 5.99874 6.27796 6.00275 4.29691 5.99273C4.0504 5.99172 3.96924 6.06592 3.99529 6.30354C4.01233 6.45193 4.01032 6.60433 3.99529 6.75272C3.97525 6.96027 4.05141 7.02443 4.26083 7.02243C5.34305 7.0134 6.42626 7.01842 7.50847 7.01842V7.01742ZM7.51849 5.02017C8.44238 5.02017 9.36727 5.02519 10.2912 5.01717C10.5196 5.01516 10.8132 5.12445 10.9605 4.96102C11.0928 4.81463 10.9756 4.52888 11.0046 4.30831C11.0397 4.04261 10.9255 3.99448 10.682 3.99649C8.69991 4.00651 6.71786 4.0005 4.73581 4.00451C4.50533 4.00451 4.21173 3.90324 4.05942 4.04762C3.89509 4.20403 4.02636 4.50582 3.99629 4.74144C3.96924 4.95901 4.0464 5.02819 4.27085 5.02619C5.35307 5.01516 6.43628 5.02118 7.51849 5.02118V5.02017Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);

export const IconRight = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#1F3B4F', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="14"
        height="9"
        viewBox="0 0 14 9"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M1.21761 3.45118C1.57599 3.45118 1.86043 3.58983 2.10789 3.81418C3.04368 4.65109 3.98516 5.48296 4.91811 6.3224C5.0262 6.41819 5.08308 6.42323 5.19401 6.3224C7.41261 4.34607 9.63974 2.37227 11.8612 0.395949C12.2053 0.0909299 12.5979 -0.077965 13.0899 0.0354718C13.9888 0.239658 14.3045 1.20513 13.6588 1.79752C12.979 2.42017 12.2821 3.02516 11.5938 3.63772C9.72507 5.29894 7.85348 6.96016 5.98474 8.62138C5.52965 9.02472 4.98353 9.1079 4.4687 8.86086C4.35493 8.8054 4.25822 8.72978 4.1672 8.64911C2.91284 7.53239 1.65564 6.41567 0.40412 5.29642C-0.167595 4.78722 -0.127774 4.05618 0.492295 3.64529C0.708466 3.5016 0.955925 3.44866 1.21761 3.44866V3.45118Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconTelegram = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        id="Layer_2"
        data-name="Layer 2"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 40.24 33.89"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <g id="Design">
          <g id="b3W9pD.tif">
            <path
              style={{ fill: hovered ? hoverColor : color, strokeWidth: 0 }}
              d="M31.97,33.89c-.47-.08-.91-.26-1.33-.49-.26-.15-.49-.35-.73-.53-.6-.45-1.2-.9-1.8-1.35-.9-.68-1.81-1.36-2.71-2.04-.85-.64-1.7-1.28-2.55-1.92-.42-.32-.84-.63-1.26-.95-.07-.05-.11-.05-.17,0-.7.67-1.41,1.34-2.11,2.01-.55.52-1.1,1.05-1.65,1.57-.46.44-.92.89-1.4,1.32-.4.36-.87.5-1.4.29-.36-.14-.59-.42-.78-.74-.04-.08-.06-.15-.05-.24.07-.77.12-1.54.19-2.31.06-.8.13-1.6.2-2.4.07-.8.13-1.6.19-2.41,0-.08.05-.12.1-.17.5-.45.99-.9,1.49-1.35.95-.86,1.9-1.73,2.85-2.59.83-.75,1.65-1.5,2.48-2.25.6-.55,1.2-1.09,1.8-1.64.62-.56,1.24-1.12,1.85-1.68.88-.8,1.76-1.6,2.64-2.4.91-.83,1.83-1.67,2.74-2.5.58-.53,1.16-1.05,1.74-1.58.46-.41.91-.82,1.37-1.24.14-.13.27-.26.34-.45.05-.16-.01-.28-.17-.32-.17-.04-.33-.02-.5.01-.37.08-.7.26-1.02.46-.51.32-1.02.64-1.53.96-.56.35-1.13.7-1.69,1.05-.87.54-1.75,1.08-2.62,1.63-.82.51-1.63,1.02-2.45,1.52-.57.35-1.14.7-1.7,1.06-.76.47-1.52.95-2.28,1.42-.88.55-1.76,1.09-2.64,1.64-1.02.63-2.03,1.27-3.05,1.9-.92.57-1.84,1.14-2.76,1.71-.45.28-.9.56-1.35.84-.05.03-.1.04-.16.02-.96-.31-1.92-.62-2.88-.92-.87-.28-1.74-.55-2.61-.83-.87-.28-1.74-.56-2.61-.84-.25-.08-.5-.16-.75-.24-.36-.11-.68-.28-.94-.57-.32-.35-.35-.82-.1-1.22.24-.38.58-.64.97-.85.37-.19.78-.32,1.16-.47.64-.25,1.29-.5,1.93-.75.99-.38,1.98-.77,2.97-1.15.82-.32,1.64-.64,2.46-.96.78-.3,1.57-.61,2.35-.91.82-.32,1.65-.64,2.47-.96.62-.24,1.25-.48,1.87-.72.63-.24,1.26-.49,1.89-.74.79-.31,1.59-.61,2.38-.92.71-.28,1.43-.55,2.14-.83.75-.29,1.5-.58,2.24-.87.72-.28,1.43-.56,2.15-.84.62-.24,1.25-.48,1.87-.72.71-.28,1.43-.55,2.14-.83.99-.38,1.98-.77,2.97-1.15.79-.31,1.58-.61,2.37-.92.36-.14.72-.29,1.09-.4.43-.12.87-.2,1.32-.15.62.08,1.07.48,1.23,1.09.04.14.06.29.1.43v.9c-.04.26-.08.52-.13.78-.09.44-.18.88-.27,1.32-.16.78-.33,1.56-.49,2.33-.12.59-.25,1.18-.37,1.77-.21,1.01-.42,2.02-.63,3.03-.15.74-.31,1.48-.47,2.22-.16.75-.32,1.5-.48,2.25-.24,1.16-.48,2.32-.73,3.49-.19.93-.39,1.86-.59,2.78-.2.94-.39,1.88-.59,2.81-.16.78-.33,1.56-.49,2.33-.16.78-.33,1.56-.49,2.33-.09.44-.19.88-.28,1.32-.1.49-.2.97-.4,1.43-.17.39-.4.75-.76,1-.19.13-.41.2-.63.25h-.47Z"
            />
          </g>
        </g>
      </svg>
    );
  },
);
export const IconUser = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="15"
        height="17"
        viewBox="0 0 15 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M2.09208 9.98329C2.18895 9.98329 2.26791 9.98329 2.34583 9.98329C5.674 9.98329 9.00217 9.9854 12.3314 9.97803C12.5335 9.97803 12.6125 10.0359 12.6715 10.2297C13.3137 12.3449 13.9665 14.4559 14.6161 16.568C14.6362 16.6344 14.6498 16.7017 14.6698 16.786H0C0.699116 14.5128 1.39402 12.2523 2.09208 9.98224V9.98329Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M3.146 4.19371C3.1481 1.89316 5.06014 -0.0136143 7.35227 7.32343e-05C9.65493 0.0137607 11.5259 1.88368 11.5385 4.18529C11.5512 6.48479 9.65914 8.38314 7.34806 8.39051C5.05067 8.39788 3.14494 6.49427 3.14705 4.19371H3.146Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconBg = forwardRef(
  ({ className, borderColor = '#B53BFF', color = '#7B0ABF', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="49"
        height="49"
        viewBox="0 0 49 49"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        {...rest}
      >
        <circle cx="24.5" cy="24.5" r="23.5" fill={color} stroke={borderColor} strokeWidth="2" />
      </svg>
    );
  },
);
