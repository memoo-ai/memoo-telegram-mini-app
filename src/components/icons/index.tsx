import { useState, forwardRef, useImperativeHandle } from 'react';

interface IconProps {
  className?: string;
  hoverColor?: string;
  [key: string]: any;
  color?: string;
  iconColor?: string;
}

export const IconSuccess = forwardRef(({ className, iconColor, color = '#36D39D', ...rest }: IconProps, ref) => {
  return (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M20 9.99887C19.9932 15.4465 15.6471 20 10 20C4.36192 20.0022 0 15.4555 0 10.0011C0 4.55354 4.35291 0 9.99775 0C15.6493 0 19.991 4.55354 19.9977 9.99887H20ZM14.668 7.59824C14.659 6.97894 14.2516 6.58259 13.734 6.58034C13.4459 6.58034 13.2118 6.71771 13.016 6.91364C11.625 8.30762 10.2341 9.70161 8.84763 11.0978C8.77335 11.1722 8.73059 11.1767 8.65631 11.0978C8.12064 10.5529 7.58046 10.0124 7.04479 9.4674C6.92775 9.34805 6.79496 9.24896 6.64866 9.17239C6.26153 8.97196 5.84065 9.08231 5.58632 9.36831C5.2172 9.78043 5.25321 10.3051 5.64483 10.6992C6.44384 11.5032 7.2451 12.3049 8.05087 13.1066C8.47175 13.5255 9.03218 13.5278 9.45307 13.1066C11.0916 11.4717 12.7279 9.83673 14.3597 8.19728C14.5465 8.01036 14.6703 7.7784 14.6703 7.59824H14.668Z"
        fill={color}
      />
    </svg>
  );
});
export const IconError = forwardRef(({ className, iconColor, color = '#EF4D61', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0013716 9.74742C0.231449 4.02189 4.77139 -0.0805219 10.1122 0.00119949C16.0992 0.0942361 20.169 4.89568 20.0244 10.2126C19.8685 15.9432 15.3587 20.072 9.94498 19.999C3.83348 19.9161 -0.0841215 15.0153 0.0013716 9.74742ZM12.5047 13.4588C12.672 13.4588 12.8128 13.44 12.9473 13.367C13.552 13.0389 13.6438 12.2883 13.1208 11.749C12.6129 11.2234 12.0911 10.7105 11.5618 10.2063C11.3984 10.0504 11.4134 9.95361 11.5656 9.80776C12.0685 9.32121 12.5601 8.82208 13.0592 8.33049C13.2101 8.18088 13.332 8.01492 13.4074 7.81628C13.6162 7.25932 13.2842 6.69732 12.6971 6.598C12.3124 6.53262 11.9993 6.66841 11.734 6.93243C11.2387 7.42653 10.7396 7.91811 10.258 8.42604C10.0808 8.61212 9.97012 8.62595 9.78405 8.42856C9.29749 7.91057 8.79711 7.40641 8.28666 6.91357C7.66432 6.3126 6.78802 6.52759 6.59189 7.32343C6.49634 7.70941 6.68115 8.01744 6.93763 8.27894C7.4355 8.78562 7.9384 9.28852 8.4501 9.78136C8.61732 9.94229 8.65378 10.0441 8.46016 10.2252C7.95726 10.6954 7.47825 11.1933 6.98666 11.676C6.85842 11.8018 6.75156 11.9413 6.66984 12.101C6.47748 12.4719 6.61452 13.0376 6.95397 13.2803C7.37767 13.5833 7.85542 13.5267 8.28038 13.1055C8.79333 12.5989 9.30252 12.0884 9.80165 11.5679C9.96006 11.4032 10.0657 11.3894 10.2316 11.5629C10.7144 12.0696 11.211 12.5637 11.7064 13.0578C11.9314 13.2828 12.1741 13.4802 12.5035 13.4576L12.5047 13.4588Z"
        fill={color}
      />
    </svg>
  );
});
export const IconWarning = forwardRef(({ className, iconColor, color = '#FFC12E', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0012091 9.75414C0.233707 3.97813 4.82964 -0.0975081 10.1419 0.00177496C16.1605 0.114882 20.1758 4.94708 20.0338 10.2066C19.8792 15.9235 15.3863 20.0683 9.95591 19.9991C3.85943 19.9225 -0.0792228 15.04 0.0012091 9.75414ZM9.06362 8.11157C9.06362 8.79021 9.05733 9.47011 9.06613 10.1488C9.07367 10.7017 9.31874 11.0788 9.73095 11.2107C10.3644 11.413 10.955 10.9958 10.9739 10.2468C11.0091 8.83671 11.0078 7.42539 10.9751 6.01531C10.9575 5.24367 10.3204 4.81386 9.67566 5.06773C9.20438 5.25372 9.0787 5.6584 9.06739 6.10454C9.05105 6.77313 9.06362 7.44172 9.06362 8.11031V8.11157ZM11.283 13.7921C11.2742 13.0418 10.759 12.5215 10.025 12.5215C9.27978 12.5215 8.74692 13.0644 8.7708 13.8235C8.79467 14.5675 9.28983 15.03 10.025 15.0224C10.8055 15.0136 11.2554 14.5436 11.283 13.7933V13.7921Z"
        fill={color}
      />
    </svg>
  );
});
export const IconInfo = forwardRef(({ className, iconColor, color = '#04D0EA', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0012091 9.75414C0.233707 3.97813 4.82964 -0.0975081 10.1419 0.00177496C16.1605 0.114882 20.1758 4.94708 20.0338 10.2066C19.8792 15.9235 15.3863 20.0683 9.95591 19.9991C3.85943 19.9225 -0.0792228 15.04 0.0012091 9.75414ZM9.06362 8.11157C9.06362 8.79021 9.05733 9.47011 9.06613 10.1488C9.07367 10.7017 9.31874 11.0788 9.73095 11.2107C10.3644 11.413 10.955 10.9958 10.9739 10.2468C11.0091 8.83671 11.0078 7.42539 10.9751 6.01531C10.9575 5.24367 10.3204 4.81386 9.67566 5.06773C9.20438 5.25372 9.0787 5.6584 9.06739 6.10454C9.05105 6.77313 9.06362 7.44172 9.06362 8.11031V8.11157ZM11.283 13.7921C11.2742 13.0418 10.759 12.5215 10.025 12.5215C9.27978 12.5215 8.74692 13.0644 8.7708 13.8235C8.79467 14.5675 9.28983 15.03 10.025 15.0224C10.8055 15.0136 11.2554 14.5436 11.283 13.7933V13.7921Z"
        fill={color}
      />
    </svg>
  );
});
export const IconTip = ({ className, color = '#ffffff', bgColor = '#5D64A2', ...rest }: IconProps) => {
  // const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="12"
      height="12"
      viewBox="0 0 12 12"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      // onMouseOver={() => setHovered(true)}
      // onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M6 12C9.31371 12 12 9.31371 12 6C12 2.68629 9.31371 0 6 0C2.68629 0 0 2.68629 0 6C0 9.31371 2.68629 12 6 12Z"
        fill={bgColor}
      />
      <path
        d="M6.0004 4.05153C5.74601 4.05153 5.53974 3.97819 5.37931 3.82922C5.21889 3.68025 5.13867 3.49691 5.13867 3.27918C5.13867 3.06146 5.21889 2.87582 5.37931 2.72914C5.53974 2.58017 5.74601 2.50684 6.0004 2.50684C6.25479 2.50684 6.46106 2.57559 6.62148 2.71539C6.78191 2.85519 6.86212 3.03396 6.86212 3.25168C6.86212 3.48315 6.7842 3.67338 6.62607 3.82464C6.47022 3.9759 6.26167 4.05153 6.0004 4.05153ZM5.30827 9.49461V5.53794H6.69253V9.49461H5.30827Z"
        fill={color}
      />
    </svg>
  );
};
export const IconCollect = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#B53BFF',
      hoverColor = '#B53BFF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg
        width={width}
        height={height}
        viewBox="0 0 23 23"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M8.85229 2.09762C10.0261 0.20968 12.7739 0.20968 13.9477 2.09762L15.5804 4.72359C15.9934 5.38785 16.6495 5.86453 17.4089 6.05206L20.4109 6.79338C22.5691 7.32635 23.4182 9.93962 21.9854 11.6394L19.9925 14.0037C19.4884 14.6017 19.2378 15.373 19.2941 16.1532L19.5167 19.2373C19.6768 21.4546 17.4538 23.0697 15.3944 22.2323L12.5301 21.0675C11.8055 20.7729 10.9945 20.7729 10.2699 21.0675L7.40555 22.2323C5.3462 23.0697 3.12322 21.4546 3.28328 19.2373L3.5059 16.1532C3.56221 15.373 3.3116 14.6017 2.80748 14.0037L0.814573 11.6394C-0.618233 9.93962 0.230867 7.32635 2.38914 6.79338L5.39112 6.05206C6.15049 5.86453 6.80659 5.38785 7.21959 4.72359L8.85229 2.09762Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconArrow = forwardRef(
  (
    {
      className = 'cursor-pointer',
      color = '#B53BFF',
      hoverColor = '#B53BFF',
      width = 23,
      height = 23,
      ...rest
    }: IconProps,
    ref,
  ) => {
    const [hovered, setHovered] = useState(false);

    return (
      <svg width="10" height="9" viewBox="0 0 10 9" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M7.92137 4.72512C7.81263 4.64857 7.74609 4.66717 7.68314 4.66717C5.19641 4.66646 2.70897 4.66359 0.222248 4.67146C0.0326671 4.67146 -0.0102568 4.61638 0.001905 4.44182C0.0169284 4.22291 0.0140668 4.00185 0.001905 3.78222C-0.00524898 3.64415 0.0441135 3.61482 0.174316 3.61553C1.50138 3.61983 2.82773 3.6184 4.15479 3.6184C5.33305 3.6184 6.5106 3.6184 7.68886 3.61697C7.74538 3.61697 7.82765 3.64487 7.85412 3.58835C7.88703 3.51824 7.80404 3.47746 7.76112 3.43454C6.90478 2.57535 6.04917 1.71472 5.18568 0.861251C5.0562 0.733194 5.05333 0.655216 5.18926 0.537175C5.35523 0.39338 5.50904 0.234562 5.65856 0.0728815C5.7487 -0.0244127 5.80593 -0.0236973 5.90108 0.0714507C6.94485 1.12094 7.99362 2.16614 9.04097 3.21348C9.31425 3.48676 9.58395 3.76362 9.85938 4.03404C9.93808 4.11131 9.95024 4.16138 9.86367 4.24795C8.54877 5.55641 7.23458 6.86702 5.92755 8.18264C5.8045 8.3064 5.73654 8.29138 5.63138 8.1762C5.48329 8.01381 5.32662 7.85856 5.16279 7.71191C5.05262 7.61247 5.05476 7.54665 5.16136 7.44149C5.94687 6.66313 6.72594 5.87762 7.5093 5.09641C7.63521 4.97121 7.77328 4.85747 7.92065 4.7244L7.92137 4.72512Z"
          fill="#B53BFF"
        />
      </svg>
    );
  },
);
